	SUBROUTINE GDHIREZ(IFXN,XA,YA)
	DIMENSION XA(8), YA(3)
CC
C	SELANAR HIREZ 100 (1024x768) DRIVER FOR DIGLIB/VAX
C	   This driver almost works, but doesn't.   It is distributed only
C	 as a time saver for those who have this device.   I (Hal) no longer
C	 have access to this terminal, so I can not debug this driver.
C	 Please call me about it ONLY AS A VERY LAST RESORT!!!!!
C
C-----------------------------------------------------------------------
C
	EXTERNAL LEN
	BYTE ESC, CSUB, TMODE, GS, CR, FF
	PARAMETER (ESC=27, CSUB=26, GS=29, CR=13, FF=12)
	CHARACTER*(*) TERMINAL
	PARAMETER (TERMINAL='TT')
C
C	DEFINITIONS FOR DEVICE CONTROL
C
	BYTE STR_BEGIN_PLOT(18), STR_COLOR_SET(6), STR_INIT_DEV(54)
	BYTE STR_END_PLOT(2), STR_ANSI(4)
	DATA STR_INIT_DEV /GS,ESC,'\',ESC,'O','D',32,96,32,64,64,
	1   ESC,'O','V',32,96,32,64,55,127,63,95,
	2   ESC,'O','O',32,96,32,64,64,
	3   ESC,'O','X',32,97,32,68,32,96,32,64,
	4   ESC,'O','Y',32,97,32,68,32,96,32,64,2*0/
	DATA STR_BEGIN_PLOT /ESC,'[','H',ESC,'[','J',GS,ESC,FF,
	1   ESC,'O','W',32,96,32,64,64,0/
	DATA STR_COLOR_SET /GS,ESC,'O','W',2*0/
	DATA STR_END_PLOT /0,0/
	DATA STR_ANSI /ESC,'2',2*0/
C
C	DEFINITIONS FOR GIN
C
	BYTE GINBUFR(8), PROMPT(4)
	DATA PROMPT /GS, ESC, CSUB, 0/
	DATA IGIN_IN_CHARS /6/		!5 FROM 4010 GIN, PLUS CR
C
C	DECLARE BUFFERING FUNCTION
C
	LOGICAL GB_TEST_FLUSH
C
C	DECLARE VARS NEED FOR DRIVER OPERATION
C
	LOGICAL LVECTOR_GOING, LDUMMY
	DIMENSION DCHAR(8)
C
C	MAKE NICE NAMES FOR THE DEVICES RESOLUTION IN X AND Y
C	 ("XGUPCM" IS X GRAPHICS UNITS PER CENTIMETER)
C
	EQUIVALENCE (DCHAR(4),XGUPCM), (DCHAR(5),YGUPCM)
	DATA DCHAR /100.0, 20.46, 15.34, 50.0, 50.0, 1.0, 133.0, 1.0/
C
C*****************
C
C	FIRST VERIFY WE GOT A GRAPHICS FUNCTION WE CAN HANDLE
C
	IF (IFXN .LE. 0 .OR. IFXN .GT. 9) RETURN
C
C	NOW DISPATCH TO THE PROPER CODE TO HANDLE THAT FUNCTION
C
	GO TO (100,200,300,400,500,600,700,800,900) IFXN
C
C	*********************
C	INITIALIZE THE DEVICE
C	*********************
C
100	CONTINUE
C
C	FIRST, INITIALIZE THE BUFFER SUBROUTINES
C
	CALL GB_INITIALIZE(CR,STR_ANSI,TERMINAL,IERR)
	YA(1) = IERR
	CALL GB_IN_STRING(STR_INIT_DEV)
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	**************************
C	GET FRESH PLOTTING SURFACE
C	**************************
C
200	CONTINUE
	CALL GB_EMPTY
	CALL GB_IN_STRING(STR_BEGIN_PLOT)
	CALL GD_4010_CAN
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	****
C	MOVE
C	****
C
300	CONTINUE
C	CONVERT CM. TO GRAPHICS UNITS ROUNDED
	IXPOSN = XGUPCM*XA(1)+0.5
	IYPOSN = YGUPCM*YA(1)+0.5
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	****
C	DRAW
C	****
C
400	CONTINUE
	IX = XGUPCM*XA(1)+0.5
	IY = YGUPCM*YA(1)+0.5
	LVECTOR_GOING = LVECTOR_GOING .AND. (.NOT. GB_TEST_FLUSH(4))
	IF (.NOT. LVECTOR_GOING) THEN
		LDUMMY = GB_TEST_FLUSH(9)
		LVECTOR_GOING = .TRUE.
		CALL GB_INSERT(GS)
		CALL GB_USE_TERMINATOR
		CALL GD_4010_CONVERT(IXPOSN,IYPOSN)
	ENDIF
	CALL GD_4010_CONVERT(IX,IY)
	IXPOSN = IX
	IYPOSN = IY
	RETURN
C
C	*****************************
C	FLUSH GRAPHICS COMMAND BUFFER
C	*****************************
C
500	CONTINUE
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	******************
C	RELEASE THE DEVICE
C	******************
C
600	CONTINUE
C
C	DE-ASSIGN THE CHANNAL
C
	CALL GB_FINISH(0)
	RETURN
C
C	*****************************
C	RETURN DEVICE CHARACTERISTICS
C	*****************************
C
700	CONTINUE
	DO 720 I=1,8
	XA(I) = DCHAR(I)
720	CONTINUE
	RETURN
C
C	****************************
C	SELECT CURRENT DRAWING COLOR
C	****************************
C
800	CONTINUE
	LDUMMY = GB_TEST_FLUSH(8)
	ICOLOR = XA(1)
	IF (ICOLOR .LT. 0 .OR. ICOLOR .GT. 1) RETURN
	IF (ICOLOR .EQ. 0) ICOLOR = 2
	CALL GB_IN_STRING(STR_COLOR_SET)
	CALL GD_4010_CONVERT(ICOLOR,0)
	CALL GD_4010_CONVERT(0,0)
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	**********************
C	PERFORM GRAPHICS INPUT
C	**********************
C
900	CONTINUE
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
C
	CALL GB_GIN(PROMPT,IGIN_IN_CHARS,.TRUE.,GINBUFR)
C
	ICHAR = GINBUFR(1)
	IX1 = GINBUFR(2)
	IX2 = GINBUFR(3)
	IY1 = GINBUFR(4)
	IY2 = GINBUFR(5)
C
	XA(1) = IAND(ICHAR,127)		!PICK CHARACTER
	XA(2) = (32*IAND(IX1,31)+IAND(IX2,31))/XGUPCM
	XA(3) = (32*IAND(IY1,31)+IAND(IY2,31))/YGUPCM
C
	CALL GB_IN_STRING(STR_ANSI)
	CALL GB_EMPTY
	RETURN
	END
