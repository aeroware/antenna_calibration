	SUBROUTINE GDDQ650(IFXN,XA,YA)
	DIMENSION XA(8), YA(3)
C
C	VT100 WITH DQ650 RETRO-GRAPHICS UPGRADE
C	 This driver assumes the terminal is normally in the VT100 mode
C	 of operation.   Thus, on device initialization, the DQ650 is set
C	 to 4027 emulation from VT100 emulation.   On device release, the
C	 DQ650 is returned to VT100 emulation.
C
C-----------------------------------------------------------------------
C
	BYTE CMD, CSUB, US, GS, CR, FF
	PARAMETER (esc=27, CMD=33, CSUB=26, US=31, GS=29, CR=13, FF=12)
	CHARACTER*(*) TERMINAL
	PARAMETER (TERMINAL='TT')
C
C	DEFINITIONS FOR DEVICE CONTROL
C
	BYTE STR_END(2), STR_BEGIN_PLOT(14), STR_COLOR_SET(8)
	BYTE STR_INIT_DQ650(49), STR_RELEASE(6)
C
	DATA STR_END /13,0/
	DATA STR_INIT_DQ650 /
	1   GS, ESC, '"', '6', 'g',
	2   CMD,'W','O','R',' ','3','0',
	3   CMD,'G','R','A',' ','1',',','3','0',
	4   CMD,'J','U','M',' ','1',',','1',
	5   CMD,'L','I','N',' ','1',
	6   CMD,'S','H','R',' ','N',
	7   CMD,'C','O','L',' ','0',2*0/
	DATA STR_BEGIN_PLOT /
	1   CMD,'E','R','A',' ','G',
	2   CMD,'C','O','L',' ','C','0',0/
	DATA STR_COLOR_SET /
	1   CMD,'C','O','L',' ','C','0',0/
	DATA STR_RELEASE /
	1   ESC,'"','0','g',2*0/
C
C	DEFINITIONS FOR GIN
C
	BYTE GINBUFR(28), PROMPT(8)
C
	DATA PROMPT /
	1   CMD,'E','N','A',' ','1',CR,0/
	DATA IGIN_IN_CHARS /27/
C
C	DECLARE BUFFERING FUNCTION
C
	LOGICAL GB_TEST_FLUSH
C
C	DECLARE VARS NEED FOR DRIVER OPERATION
C
	LOGICAL LVECTOR_GOING, LDUMMY
	DIMENSION DCHAR(8)
C
C	MAKE NICE NAMES FOR THE DEVICES RESOLUTION IN X AND Y
C	 ("XGUPCM" IS X GRAPHICS UNITS PER CENTIMETER)
C
	EQUIVALENCE (DCHAR(4),XGUPCM), (DCHAR(5),YGUPCM)
	DATA DCHAR /650.0, 21.69, 14.223, 29.46, 29.46, 1.0, 133.0, 1.0/
C
C*****************
C
C	FIRST VERIFY WE GOT A GRAPHICS FUNCTION WE CAN HANDLE
C
	IF (IFXN .LE. 0 .OR. IFXN .GT. 9) RETURN
C
C	NOW DISPATCH TO THE PROPER CODE TO HANDLE THAT FUNCTION
C
	GO TO (100,200,300,400,500,600,700,800,900) IFXN
C
C	*********************
C	INITIALIZE THE DEVICE
C	*********************
C
100	CONTINUE
C
C	FIRST, INITIALIZE THE BUFFER SUBROUTINES
C
	CALL GB_INITIALIZE(US,STR_END,TERMINAL,IERR)
	YA(1) = IERR
	IF (IERR .NE. 0) RETURN
	CALL GB_IN_STRING(STR_INIT_DQ650)
	CALL GD4027_MAP(CC,0,0,100,100)
	CALL GD4027_MAP(CC,7,0,0,0)
190	CONTINUE
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	**************************
C	GET FRESH PLOTTING SURFACE
C	**************************
C
200	CONTINUE
	CALL GB_EMPTY
	CALL GB_IN_STRING(STR_BEGIN_PLOT)
	GO TO 190
C
C	****
C	MOVE
C	****
C
300	CONTINUE
C	CONVERT CM. TO GRAPHICS UNITS ROUNDED
	IXPOSN = XGUPCM*XA(1)+0.5
	IYPOSN = YGUPCM*YA(1)+0.5
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	****
C	DRAW
C	****
C
400	CONTINUE
	IX = XGUPCM*XA(1)+0.5
	IY = YGUPCM*YA(1)+0.5
	LVECTOR_GOING = LVECTOR_GOING .AND. (.NOT. GB_TEST_FLUSH(4))
	IF (LVECTOR_GOING) GO TO 410
	LDUMMY = GB_TEST_FLUSH(9)
	LVECTOR_GOING =  .TRUE.
	CALL GB_INSERT(GS)
	CALL GB_USE_TERMINATOR
	CALL GD_4010_CONVERT(IXPOSN,IYPOSN)
410	CALL GD_4010_CONVERT(IX,IY)
	IXPOSN = IX
	IYPOSN = IY
	RETURN
C
C	*****************************
C	FLUSH GRAPHICS COMMAND BUFFER
C	*****************************
C
500	CONTINUE
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	******************
C	RELEASE THE DEVICE
C	******************
C
600	CONTINUE
C
C	RETURN TO VT100 MODE
C
	CALL GB_EMPTY
	CALL GB_IN_STRING(STR_RELEASE)
	CALL GB_EMPTY
	RETURN
C
C	*****************************
C	RETURN DEVICE CHARACTERISTICS
C	*****************************
C
700	CONTINUE
	DO 720 I=1,8
	XA(I) = DCHAR(I)
720	CONTINUE
	RETURN
C
C	****************************
C	SELECT CURRENT DRAWING COLOR
C	****************************
C
800	CONTINUE
	CALL GB_EMPTY
	ICOLOR = XA(1)
	IF (ICOLOR .LT. 0 .OR. ICOLOR .GT. 1) RETURN
	IF (ICOLOR .EQ. 0) THEN
		STR_COLOR_SET(7) = 48+7
	    ELSE
		STR_COLOR_SET(7) = 48
	ENDIF
	CALL GB_IN_STRING(STR_COLOR_SET)
	LVECTOR_GOING = .FALSE.
	RETURN
C
C	**********************
C	PERFORM GRAPHICS INPUT
C	**********************
C
900	CONTINUE
	CALL GB_EMPTY
	LVECTOR_GOING = .FALSE.
C
C	ASK FOR 1 GIN INPUT
C
C
	CALL GB_GIN(PROMPT,IGIN_IN_CHARS,.FALSE.,GINBUFR)
C
C	GET KEY PRESSED, X AND Y
C
C	KEY IS AT 9, X IS AT 13, AND Y IS AT 17
C
	DECODE (11,911,GINBUFR(9)) XA(1), XA(2), XA(3)
911	FORMAT(F3.0,1X,F3.0,1X,F3.0)
	XA(2) = XA(2)/XGUPCM
	XA(3) = XA(3)/YGUPCM
	RETURN
	END
