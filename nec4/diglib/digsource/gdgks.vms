	SUBROUTINE GDGKS(IFXN,XA,YA)
	DIMENSION XA(8), YA(3)
C
C	A GKS DRIVER FOR DIGLIB/VAX
C
C-----------------------------------------------------------------------
C
	INCLUDE 'SYS$LIBRARY:GKSDEFS.BND'
	EXTERNAL LEN
C
C	DECLARE BUFFERING FUNCTION
C
	DIMENSION XRY(2), YRY(2)
	DIMENSION EAREA(4),DATREC(100)
	DIMENSION DCHAR(8)
	LOGICAL GINIT
	COMMON GINIT, XCM, YCM
C
C	MAKE NICE NAMES FOR THE DEVICES RESOLUTION IN X AND Y
C	 ("XGUPCM" IS X GRAPHICS UNITS PER CENTIMETER)
C
	EQUIVALENCE (DCHAR(4),XGUPCM), (DCHAR(5),YGUPCM)
	DATA GINIT/.TRUE./
C
C*****************
C
C	FIRST VERIFY WE GOT A GRAPHICS FUNCTION WE CAN HANDLE
C
	IF (IFXN .LE. 0 .OR. IFXN .GT. 9) RETURN
C
C	NOW DISPATCH TO THE PROPER CODE TO HANDLE THAT FUNCTION
C
	GO TO (100,200,300,400,500,600,700,800,900) IFXN
C
C	*********************
C	INITIALIZE THE DEVICE
C	*********************
C
100	CONTINUE
C
C	CHECK TO SEE IF THE WORK STATION STATE IS OPEN OR NOT
C
	CALL GQOPS (ISTATE)
	IF (ISTATE .EQ. 0) THEN
		OPEN (UNIT=1,FILE='SYS$ERROR:',STATUS='NEW')
		CALL GOPKS (1)
		CALL GKS$OPEN_WS (1,0,0)
		CALL GACWK (1)
	ENDIF
	RETURN
C
C	**************************
C	GET FRESH PLOTTING SURFACE
C	**************************
C
200	CONTINUE
	CALL GCLRWK (1,0)
	RETURN
C
C	****
C	MOVE
C	****
C
300	CONTINUE
C	CONVERT CM. TO GRAPHICS UNITS ROUNDED
	XPOSN = XA(1)
	YPOSN = YA(1)
	RETURN
C
C	****
C	DRAW
C	****
C
400	CONTINUE
	XRY(1) = XPOSN
	YRY(1) = YPOSN
	XRY(2) = XA(1)
	YRY(2) = YA(1)
	CALL GPL (2, XRY, YRY)
	XPOSN = XRY(2)
	YPOSN = YRY(2)
	RETURN
C
C	*****************************
C	FLUSH GRAPHICS COMMAND BUFFER
C	*****************************
C
500	CONTINUE
	RETURN
C
C	******************
C	RELEASE THE DEVICE
C	******************
C
600	CONTINUE
C
C	DE-ASSIGN THE CHANNAL
C
	CALL GDAWK(1)
	CALL GCLWK(1)
	CALL GCLKS
	RETURN
C
C	*****************************
C	RETURN DEVICE CHARACTERISTICS
C	*****************************
C
700	CONTINUE
C
C	*****************************************
C	INQUIRE THE WORKSTATION'S CHARACTERISTICS
C	*****************************************
C 
	CALL GQOPS (ISTATE)
	IF (ISTATE .EQ. 0) THEN
		OPEN (UNIT=1,FILE='SYS$ERROR:',STATUS='NEW')
		CALL GOPKS (1)
		CALL GKS$OPEN_WS (1,0,0)
		CALL GACWK (1)
	ENDIF
C
	CALL GQWKC (1,IERR,0,IWSTYPE)
	DCHAR(1) = IWSTYPE
	CALL GQMDS (IWSTYPE,IERR,METRE,X,Y,IX,IY)
C
	CALL GSWKVP(1,0.0,X,0.0,Y)
	IF (X .GT. Y) CALL GSWKWN (1,0.0,1.0,0.0,Y/X)
	IF (X .LE. Y) CALL GSWKWN (1,0.0,X/Y,0.0,1.0)
C
	DCHAR(2) = X * 100.
	DCHAR(3) = Y * 100.
	IF (IX .GT. 0) DCHAR(4) = (IX-1.0)/DCHAR(2)
	IF (IY .GT. 0) DCHAR(5) = (IY-1.0)/DCHAR(3)
 	CALL GQCF (IWSTYPE,IERR,NCOLOR,ICOLOR,NCLRDX)
	DCHAR(6) = NCOLOR
	CALL GQWKCL (IWSTYPE,IERR,ICLASS)
	DCHAR(7) = ICLASS + 900.
	DCHAR(8) = 1.
	CALL GSELNT (1)
	CALL GSWN (1,0.0,DCHAR(2),0.0,DCHAR(3))
	IF (X .GT. Y) CALL GSVP (1,0.0,1.0,0.0,Y/X)
	IF (X .LE. Y) CALL GSVP (1,0.0,X/Y,0.0,1.0)
C
	DO 720 I=1,8
	XA(I) = DCHAR(I)
720	CONTINUE
	RETURN
C
C	****************************
C	SELECT CURRENT DRAWING COLOR
C	****************************
C
800	CONTINUE
	ICOLOR = XA(1)
	CALL GSPLCI (ICOLOR)
	RETURN
C
C	**********************
C	PERFORM GRAPHICS INPUT
C	**********************
C
900	CONTINUE
C
C	ONLY LOCATOR IS IMPLEMENTED RIGHT NOW.
C
	IF (GINIT) THEN
		CALL GQLCS (1,1,1,100,IERR,IMODE,IESW,ITNR,XINIT,YINIT,IPMT, 
	1		    EAREA,LDR,DATREC)
		CALL GINLC (1,1,ITNR,XINIT,YINIT,IPMT,0.0,X,0.0,Y,LDR,DATREC)
		CALL GSLCM (1,1,0,1)
                CALL GSVPIP(1,0,GHIGHR)
		GINIT = .FALSE.
	ENDIF
C
	CALL GRQLC (1,1,ISTATE,IXFM,X,Y)
	XA(1) = ' '
	XA(2) = X
	XA(3) = Y
C
	RETURN
	END
