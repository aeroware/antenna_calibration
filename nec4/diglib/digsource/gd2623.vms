	SUBROUTINE GD2623(IFXN,XA,YA)
	DIMENSION XA(8), YA(3)
C
C	HP 2623 DRIVER FOR DIGLIB/VAX
C
C-----------------------------------------------------------------------
C
	BYTE ESC, DC1, BPENUP
	PARAMETER (ESC=27)
	PARAMETER (DC1=17)
	PARAMETER (BPENUP = 97)

	CHARACTER*(*) TERMINAL
	PARAMETER (TERMINAL='TT')
C
C	DEVICE CONTROL DEFINITIONS
C
	BYTE CHAR_TERM, STR_END(2), STR_BEGIN_PLOT(24)
	BYTE STR_END_PLOT(6), STR_COLOR_SET(6)
	BYTE STR_START_VEC(6), STR_RLS_DEV(6)
	BYTE BDUMMY, BINTERLOCK(2)
	DATA BINTERLOCK /5,0/		!ENQUIRE FOR 2648 HANDSHAKE
	DATA CHAR_TERM /'Z'/
	DATA STR_END /13,0/
	DATA STR_BEGIN_PLOT /
	1   ESC,'H',			!HOME ALPHA CURSOR
	2   ESC,'J',			!ERASE TO END OF ALPHA MEMORY
	3   ESC,'*','d','A',		!CLEAR GRAPHICS MEMORY
	4   ESC,'*','d','C',		!GRAPHICS DISPLAY ON
	5   ESC,'*','m','2','A',	!SET FOREGROUND TO DOTS ON
	6   ESC,'*','m','1','B',2*0/	!SET SOLID LINES
	DATA STR_END_PLOT /
	1   ESC,'H',			!HOME ALPHA CURSOR
	2   ESC,'J',2*0/		!ERASE TO END OF ALPHA MEMORY
	DATA STR_COLOR_SET /
	1   ESC,'*','m','1','A',0/	!1 ==> DOTS ON, 2 ==> DOTS OFF
	DATA STR_START_VEC /
	1   ESC,'*','p','i',2*0/	!START VECTOR
	DATA STR_RLS_DEV /
	1   ESC,'*','d','D',2*0/	!TURN GRAPHICS OFF
C
C	GIN DEFINITIONS
C
	BYTE GINBUFR(28), PROMPT(8), PLUS_SIGN
	DATA PROMPT /ESC,'*','s','4','^',DC1,2*0/
	DATA PLUS_SIGN /'+'/
C
C	DECLARE BUFFERING FUNCTION TO BE LOGICAL
C
	LOGICAL GB_TEST_FLUSH

C
C	DELCARE VARS NEEDED FOR DRIVER OPERATION
C
	LOGICAL LVECTOR_GOING
C
	DIMENSION DCHAR(8)
C
C	MAKE NICE NAMES FOR THE DEVICES RESOLUTION IN X AND Y
C	 ("XGUPCM" IS X GRAPHICS UNITS PER CENTIMETER)
C
	EQUIVALENCE (DCHAR(4),XGUPCM), (DCHAR(5),YGUPCM)
	DATA DCHAR /2623.0, 21.689, 16.511, 23.56, 23.56, 1.0, 133.0, 1.0/
C
C	FIRST VERIFY WE GOT A GRAPHICS FUNCTION WE CAN HANDLE
C
	IF (IFXN .LE. 0 .OR. IFXN .GT. 9) RETURN
C
C	NOW DISPATCH TO THE PROPER CODE TO HANDLE THAT FUNCTION
C
	GO TO (100,200,300,400,500,600,700,800,900) IFXN
C
C	*********************
C	INITIALIZE THE DEVICE
C	*********************
C
100	CONTINUE
	CALL GB_INITIALIZE(CHAR_TERM,STR_END,TERMINAL,IERR)
	YA(1) =IERR
	GO TO 290
C
C	**************************
C	GET FRESH PLOTTING SURFACE
C	**************************
C
200	CONTINUE
	CALL GB_NEW_BUFFER
	CALL GB_IN_STRING(STR_BEGIN_PLOT)
	CALL GB_EMPTY
290	LVECTOR_GOING = .FALSE.
	RETURN
C
C	****
C	MOVE
C	****
C
300	CONTINUE
C	MAKE DECISION ON MOVE/DRAW LATER
C
C	****
C	DRAW
C	****
C
400	CONTINUE
	IXPOSN = XGUPCM*XA(1)+0.5
	IYPOSN = YGUPCM*YA(1)+0.5
	IF (.NOT. LVECTOR_GOING) THEN
	    CALL GB_INTERLOCK(BINTERLOCK,BDUMMY,1)
	    LDUMMY = GB_TEST_FLUSH(18)
	    CALL GB_IN_STRING(STR_START_VEC)
	    CALL GB_USE_TERMINATOR
	    LVECTOR_GOING = .TRUE.
	  ENDIF
	IF (IFXN .EQ. 3) CALL GB_INSERT(BPENUP)	!IF MOVE, DO PEN-UP FIRST
	CALL GD26CONVERT(IXPOSN,IYPOSN)
	LVECTOR_GOING = .NOT. GB_TEST_FLUSH(6)
	RETURN
C
C	*****************************
C	FLUSH GRAPHICS COMMAND BUFFER
C	*****************************
C
500	CONTINUE
	CALL GB_EMPTY
	CALL GB_IN_STRING(STR_END_PLOT)
	CALL GB_EMPTY
	GO TO 290
C
C	******************
C	RELEASE THE DEVICE
C	******************
C
600	CONTINUE
	CALL GB_FINISH(STR_RLS_DEV)
	RETURN
C
C	*****************************
C	RETURN DEVICE CHARACTERISTICS
C	*****************************
C
700	CONTINUE
	DO 720 I=1,8
	XA(I) = DCHAR(I)
720	CONTINUE
	RETURN
C
C	****************************
C	SELECT CURRENT DRAWING COLOR
C	****************************
C
800	CONTINUE
	CALL GB_EMPTY
	ICOLOR = XA(1)
	IF (ICOLOR .LT. 0 .OR. ICOLOR .GT. 1) RETURN
	IF (ICOLOR .EQ. 0) THEN
	    STR_COLOR_SET(4) = '1'
	  ELSE
	    STR_COLOR_SET(4) = '2'
	  ENDIF
	CALL GB_IN_STRING(STR_COLOR_SET)
	GO TO 290
C
C	**********************
C	PERFORM GRAPHICS INPUT
C	**********************
C
900	CONTINUE
	CALL GB_EMPTY
C
C	ASK FOR 1 GIN INPUT
C
C
	CALL GB_GIN(PROMPT,27,.FALSE.,GINBUFR)
C
C	GET THE KEY, X POSITION, AND Y POSITION
C
C
	IPTR = 0
910	IPTR = IPTR + 1
	IF (GINBUFR(IPTR) .NE. PLUS_SIGN) GO TO 910
	DECODE (17,911,GINBUFR(IPTR)) IX, IY, ICHAR
911	FORMAT(I6,1X,I6,1X,I3)
	XA(1) = ICHAR	!PICK CHARACTER
	XA(2) = FLOAT(IX)/XGUPCM	!X IN CM.
	XA(3) = FLOAT(IY)/YGUPCM	!Y IN CM.
	GO TO 290
	END
