function [I,Z_a]=GetCurrent(ant, f,volt,integral,inte)

%   function [I,Z_a]=GetCurrent(ant, f,volt,integral,inte)
%
%   This function computes the currents of the wiregrid structure stored in
%   ant and saves it in I. It uses the method of moments. The antenna
%   impedance is also calculated and stored in Z_a
%
%   ant...antenna structure
%   f...frequency
%   volt...excitation voltage on feeds
%   integral...method of integral evaluation
%   inte...number of integration steps

% constants

mu=4*pi*1e-7;    % henry/meter...free space
epsilon=8.8542e-12;   % parad/meter...free space
Z0=377;  % ohm...impedance of free space

% parameter

if(nargin<3)
    volt=1;
end

if(nargin<4)
    integral=1;
end

if(nargin<5)
    inte=50;
end

%   setup matrices

N=ant.nSegs;
M=ant.nNodes;

I=zeros(N,1);   % Current vector
E=zeros(N,1);   % Voltages
Z=zeros(N);     % Impedanz Matrix
l=zeros(N,1);

wavelength=3e8/f;
k=2*pi/wavelength;
omega=2*pi*f;
a=ant.radius;  % wire radius
a_rel=a/wavelength; 

%   construct impedance matrix

for(n=1:N)
    l(n)=norm((ant.nodes(ant.segs(n,2),:)-ant.nodes(ant.segs(n,1),:)),'fro');
    mid(n,:)=(ant.nodes(ant.segs(n,1),:)+ant.nodes(ant.segs(n,2),:))./2;
end

l_rel=l./wavelength;

% compute distance between segments

r=zeros(N);
n=1:N;
m=1:N;
for(m=1:N)
    for(n=1:N)           
        r(m,n)=sqrt(norm(mid(n,:)-mid(m,:),'fro')^2+a^2);
    end
end

r_rel=r./wavelength;

% constructing the integrand

G=zeros(N,N);
        

% integrating

switch(integral)
     case(1) % do integration
         fprintf('Working on segment 000');
        for(m=1:N)
            fprintf('\b\b\b\b%4i',m);
            for(n=1:N)
                    % do integration
                              
                    len=l(n)/inte;
                    
                    for(p=1:inte)
                        midpoint(p,:)=ant.nodes(ant.segs(n,1),:)...
                            +(p-0.5)*(ant.nodes(ant.segs(n,2),:)...
                            -ant.nodes(ant.segs(n,1),:))./inte;
                        
                        dist(p)=sqrt(norm(midpoint(p,:)-mid(m,:),'fro')^2+a^2);
                        
                        Gmn(p)=(Z0*wavelength)/(i*8*pi^2)*(exp(-i*k*dist(p))/dist(p)^5)...
                            *((1+i*k*dist(p))*(2*dist(p)^2-3*a^2)+k^2*a^2*dist(p)^2);        
                    end
                   Gmn=Gmn*len;
                   G(m,n)=sum(Gmn);
            end % for
        end % for
end % switch

% compute impedance matrix
    

E(ant.feeds)=volt./l(ant.feeds);


I=-G\E;

% Antenna Impedance

Z_a=volt./I(ant.feeds)
heff=sqrt(norm((mid(1,:)-l(1)/2)-(mid(N,:)+l(N)/2),'fro')^2+a^2)/2
RadiationResistance=20*(heff*k)^2;

fprintf('Radiation Resistance of ideal thin dipole = %f',RadiationResistance);

figure
plot(abs(I));
title('Current Distribution/ Absolute value');

figure
plot(real(I));
title('Current Distribution/ Real part');

figure
plot(imag(I));
title('Current Distribution/ Imaginary part');