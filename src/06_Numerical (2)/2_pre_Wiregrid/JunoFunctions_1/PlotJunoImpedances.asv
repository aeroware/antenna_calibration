%   PlotStereoImpedances
%
%   This script makes three plots of the Impedances of the Stereo model.
%   It plots the real part, the imaginary part and the real
%   vs. imaginary part
%
%   Written by Thomas Oswald, June 2007
%   ref. code. 837647326728-12



clear;

patches=1;
titl='Juno 2';
solver=2;
asapexe='Asap3g.exe';
CurrentFile=strcat('..\JunoData\ConceptCurrentsPatches.mat');
ca=0;
force=1;
epsilonr=1;
f=1e5:2e5:32e6;

ant=CreateJunoGrid;

if patches
    ant=Wire2Patch(ant,titl);
end


for(n=1:length(f))
    fprintf('\n\n\nNew Calculation !\n');   
    
    OP=VarLoad(CurrentFile,f(n)/1e3,'OP');
    if(isempty(OP) | force==1)
        OP=JunoCurrent(f(n),ant,solver,asapexe, titl,patches,epsilonr);
        VarSave(CurrentFile,OP,f(n)/1e3,'OP'); 
    end
     
    Imps(n,:,:)=reshape(AntImpedance(ant, OP,solver,0,25.4/1000),[1,2,2]);
end % for all frequenzies
    
Z1=Imps(:,1,1); %(:,1,1);
Z2=Imps(:,2,2);
       
freq=f./1e6;
    
lab=cellstr(['Frequency/MHz                                    '
             'Impedance-Real Part/Ohm                          '
             'Impedance-Imaginary Part/Ohm                     '
             '                                                 '
             'Impedances: Real and Imaginary Part vs. Frequency']);
    
figure
[h1,h2]=PlotComplex(freq,Z1,1,'',1);
PlotComplex(freq,Z2,1,'',1)
    
h=findobj('Type','line');
set(h(1),'color','b')
set(h(2),'color','r')
   
set(h(3),'color','b')
set(h(4),'color','r')
   
legend('E_1','E_2')

    
title(strcat('Impedances: Real and Imaginary Part vs. Frequency',strcat('/',titl)));
lab=cellstr(['                                        '
             'Impedance-Real Part/Ohm                 '
             'Impedance-Imaginary Part/Ohm            '
             '                                        '
             'Impedances: Real Part vs. Imaginary Part']);

figure
PlotComplex(freq,Z1,3,'',1)
PlotComplex(freq,Z2,3,'',1)

h=findobj('Type','line');
set(h(1),'color','b')
set(h(2),'color','r')

legend('E_1','E_2')
title(strcat('Impedances: Real Part vs. Imaginary Part',strcat('/',titl)));

% daten umformatieren, für punkte

for(i=1:length(f)/10)
    R1(i)=real(Z1(i*10));
    R2(i)=real(Z2(i*10));
    
    I1(i)=imag(Z1(i*10));
    I2(i)=imag(Z2(i*10));
end

hold on    
plot(R1,I1,'k+'); 
plot(R2,I2,'k+'); 
    
   
for(i=1:length(f)/10)
    text(R1(i),I1(i),sprintf(' %d MHz',freq(i*10)));
    text(R2(i),I2(i),sprintf(' %d MHz',freq(i*10)));
end
    
    % extra plot
    
  %  figure(3)
    
   % loglog(freq,real(Z1)./freq')

hold off
        
%         if(ca==1)
%             caps_b=eye(3)./90e-12;
%             %caps_p=eye(3)./40e-12;  % due to plasma...bale
%            % caps_p=eye(3)./87e-12;  % due to plasma...ich
%             impedances_b=1./((1/5e6)+  (1./(caps_b./(i*OP.Freq*2*pi))));
%             %impedances_p=1./((0/0.2e6)+(1./(caps_p./(i*OP.Freq*2*pi))));
%         end
        
        
%         Imps(n,:,:)=reshape(AntImpedance(ant, OP,solver,0,25.4/1000),[1,3,3]);   % radienkorrekturen funzen nur im quasistatischen grenzfall !!!
%         
%         if(ca==1)
%             for nn=1:3
%                 impedances(nn,nn)=Imps(n,nn,nn);%+impedances_p(nn,nn);
%             end
%         end
%         %Imps(n)=AntImpedance(ant, OP,solver,6,25.4/1000); % dipole
%         
%         if(ca==1)
%             Imps(n,1,1)=1/(1/impedances(1,1)+1/impedances_b(1,1));
%             Imps(n,2,2)=1/(1/impedances(2,2)+1/impedances_b(2,2));
%             Imps(n,3,3)=1/(1/impedances(3,3)+1/impedances_b(3,3));
%         end
        
   
    
    
    

